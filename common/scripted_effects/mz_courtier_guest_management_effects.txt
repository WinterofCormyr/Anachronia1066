## Add for warmonger
pool_character_development_effect = {
	###POSIBLE EFFECTS###
	# Increase a low skill
	# Get married
	# Get a scripted relation
	# Get a lifestyle trait
	# Get a commander trait
	# Get an interesting trait
	# Get a secret
	# Kill someone

	save_temporary_scope_as = pool_character


	random_list = {
		# INCREASE A LOW SKILL
		100 = {
			trigger = { diplomacy < medium_skill_rating }
			add_diplomacy_skill = 1
		}
		100 = {
			trigger = { martial < medium_skill_rating }
			add_martial_skill = 1
		}
		100 = {
			trigger = { stewardship < medium_skill_rating }
			add_stewardship_skill = 1
		}
		100 = {
			trigger = { intrigue < medium_skill_rating }
			add_intrigue_skill = 1
		}
		100 = {
			trigger = { learning < medium_skill_rating }
			add_learning_skill = 1
		}
		100 = {
			trigger = { prowess < medium_skill_rating }
			modifier = {
				NOT = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:pool_character } }
				factor = 0.1
			}
			add_prowess_skill = 1
		}
		400 = {
			trigger = {
				prowess > medium_skill_rating
				NOT = {
					has_trait = berserker
				}
				OR = {
					faith = { has_doctrine_parameter = warmonger }
					faith = { has_doctrine_parameter = mz_warriors_can_be_berserkers }
				}
				OR = {
					culture_group = culture_group:north_germanic_group
					religion = religion:germanic_religion
				}
			}
			modifier = {
				NOT = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:pool_character } }
				factor = 0.1
			}
			add_trait = berserker
		}
		100 = {
			trigger = {
				diplomacy >= medium_skill_rating
				NOT = {
					has_trait = poet
				}
				OR = {
					culture_group = culture_group:north_germanic_group
					religion = religion:germanic_religion
				}
			}
			add_trait = poet
		}

		# GET MARRIED
		15 = {
			trigger = {
				is_physically_able_adult = yes
				age <= 40
				is_married = no
				can_marry_trigger = yes
				is_concubine = no
				is_lowborn = no
				#The triggers below are here to avoid low fertility marriages
				OR = {
					has_sexuality = heterosexual
					has_sexuality = bisexual
				}
				NOR = {
					has_trait = celibate
					has_trait = chaste
				}
				fertility > low_fertility
			}
			
			save_temporary_scope_as = template
			
			if = {
				limit = {
					exists = scope:pool_character.location
					any_pool_character = {
						province = scope:pool_character.location
						sex_opposite_of = scope:pool_character
						is_physically_able_adult = yes
						age <= 40
						is_married = no
						can_marry_trigger = yes
						is_concubine = no
						is_attracted_to_gender_of = scope:pool_character
					}
				}
				random_pool_character = {
					province = scope:pool_character.location
					limit = {
						sex_opposite_of = scope:pool_character
						is_physically_able_adult = yes
						age <= 40
						is_married = no
						can_marry_trigger = yes
						is_concubine = no
						is_attracted_to_gender_of = scope:pool_character
					}
					save_temporary_scope_as = spouse
				}
			}
			else = {
				create_character = {
					location = scope:template.location
					opposite_gender = scope:template
					template = pool_repopulate_spouse
					save_temporary_scope_as = spouse
				}
			}

			if = {
				limit = {
					is_female = yes
					is_lowborn = no
					scope:spouse = {
						is_lowborn = yes
					}
				}
				marry_matrilineal = scope:spouse
			}
			else_if = {
				limit = {
					is_male = yes
					is_lowborn = yes
					scope:spouse = {
						is_lowborn = no
					}
				}
				marry_matrilineal = scope:spouse
			}
			else = {
				marry = scope:spouse
			}
			
			scope:spouse = {
				if = {
					limit = {
						exists = scope:template.host
					}
					visit_court_of = scope:template.host
				}
			}
		}

		# GET A LIFESTYLE TRAIT
		50 = {
			trigger = {
				number_of_lifestyle_traits <= 2
				is_adult = yes
			}
			modifier = {
				number_of_lifestyle_traits = 0
				factor = 2
			}

			random_list = {
				100 = { #REVELER
					trigger = {
						NOT = { has_trait = reveler_3 }
						NOR = {
							has_trait = shy
							has_trait = celibate
							has_trait = temperate
							has_trait = chaste
							ai_greed < 0
						}
					}
					modifier = {
						has_trait = lifestyle_reveler
						factor = 5
					}
					change_trait_rank = {
						trait = lifestyle_reveler
						rank = 1
						max = 3
					}
				}
				100 = { #BLADEMASTER
					trigger = {
						NOT = { has_trait = blademaster_3 }
						prowess >= decent_skill_rating
					}
					modifier = {
						has_trait = lifestyle_blademaster
						factor = 5
					}
					modifier = {
						NOT = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:pool_character } }
						factor = 0.1
					}
					change_trait_rank = {
						trait = lifestyle_blademaster
						rank = 1
						max = 3
					}
				}
				100 = { #HUNTER
					trigger = {
						NOT = { has_trait = hunter_3 }
						ai_boldness >= medium_positive_ai_value
						ai_energy >= low_positive_ai_value
						ai_compassion < high_positive_ai_value
					}
					modifier = {
						has_trait = lifestyle_hunter
						factor = 5
					}
					change_trait_rank = {
						trait = lifestyle_hunter
						rank = 1
						max = 3
					}
				}
				100 = { #PHYSICIAN
					trigger = {
						NOT = { has_trait = physician_3 }
						learning >= decent_skill_rating
					}
					modifier = {
						has_trait = lifestyle_physician
						factor = 5
					}
					change_trait_rank = {
						trait = lifestyle_physician
						rank = 1
						max = 3
					}
				}
				100 = { #MYSTIC
					trigger = {
						NOT = { has_trait = mystic_3 }
						learning >= decent_skill_rating
					}
					modifier = {
						has_trait = lifestyle_mystic
						factor = 5
					}
					modifier = {
						ai_zeal > 0
						factor = 0.5
					}
					modifier = {
						is_witch_trigger = yes
						factor = 3
					}
					change_trait_rank = {
						trait = lifestyle_mystic
						rank = 1
						max = 3
					}
				}
				100 = { #HERBALIST
					trigger = {
						NOT = { has_trait = lifestyle_herbalist }
						learning >= decent_skill_rating
					}
					modifier = {
						ai_zeal > 0
						factor = 0.5
					}
					modifier = {
						is_witch_trigger = yes
						factor = 3
					}
					add_trait = lifestyle_herbalist
				}
			}
		}

		#GET A COMMANDER TRAIT
		100 = {
			trigger = {
				has_trait = education_martial
				number_of_commander_traits < commander_trait_limit
			}

			random_list = {
				1 = {
					trigger = { NOT = { has_trait = logistician } }
					add_trait = logistician
				}
				1 = {
					trigger = { NOT = { has_trait = military_engineer } }
					add_trait = military_engineer
				}
				1 = {
					trigger = { NOT = { has_trait = aggressive_attacker } }
					add_trait = aggressive_attacker
				}
				1 = {
					trigger = { NOT = { has_trait = unyielding_defender } }
					add_trait = unyielding_defender
				}
				1 = {
					trigger = { NOT = { has_trait = forder } }
					add_trait = forder
				}
				1 = {
					trigger = { NOT = { has_trait = holy_warrior } }
					add_trait = holy_warrior
				}
				1 = {
					trigger = { NOT = { has_trait = reckless } }
					add_trait = reckless
				}
				1 = {
					trigger = { NOT = { has_trait = cautious_leader } }
					add_trait = cautious_leader
				}
				1 = {
					trigger = { NOT = { has_trait = rough_terrain_expert } }
					add_trait = rough_terrain_expert
				}
				1 = {
					trigger = { NOT = { has_trait = open_terrain_expert } }
					add_trait = open_terrain_expert
				}
			}
		}

		# GET AN INTERESTING TRAIT
		20 = {
			trigger = { is_adult = yes }
			random_list = {
				1 = {
					trigger = { NOT = { has_trait = lunatic } }
					add_trait = lunatic_1
				}
				1 = {
					trigger = { NOT = { has_trait = possessed } }
					add_trait = possessed_1
				}
				1 = {
					trigger = { NOT = { has_trait = scarred } }
					add_trait = scarred
				}
				1 = {
					trigger = { NOT = { has_trait = poet } }
					add_trait = poet
				}
				1 = {
					trigger = {
						can_be_drunkard = yes
					}
					add_trait = drunkard
				}
				1 = {
					trigger = { #Does not use the can_be_rakish to reduce performance hit
						NOR = {
							has_trait = rakish
							has_trait = celibate
							has_trait = chaste
							has_sexuality = asexual
						}
					}
					add_trait = rakish
				}
				1 = { #Does not use the can_be_flagellant to reduce performance hit
					trigger = { NOT = { has_trait = flagellant } }
					add_trait = flagellant
				}
				1 = { #Does not use the can_be_contrite to reduce performance hit
					trigger = {
						NOR = {
							has_trait = deceitful
							has_trait = contrite
						}
					}
					add_trait = contrite
				}
				1 = { #Does not use the can_be_journaller to reduce performance hit
					trigger = { NOT = { has_trait = journaller } }
					add_trait = journaller
				}
				1 = {
					trigger = {
						NOT = { has_trait = eunuch }
						is_male = yes
					}
					add_trait = eunuch
				}
				1 = {
					trigger = { NOT = { has_trait = blind } }
					add_trait = blind
				}
				1 = {
					trigger = {
						NOR = {
							has_trait = intellect_bad
							has_trait = dull
							has_trait = shrewd
						}
					}
					add_trait = shrewd
				}
				1 = {
					trigger = {
						NOR = {
							has_trait = weak
							has_trait = physique_bad
							has_trait = strong
						}
					}
					add_trait = strong
				}
			}
		}

		# GET A SECRET
		30 = {
			trigger = {
				NOT = { any_secret = { always = yes } }
				is_adult = yes
			}

			courtier_guest_pool_character_secret_giving_effect = yes
		}
	} #RANDOM_LIST ENDS HERE
	
	while = {
		limit = {
			gold >= 1000
			NOT = {
				any_player = {
					exists = dynasty
					dynasty = scope:pool_character.dynasty
				}
			}
		}
		random_list = {
			100 = { # Spend gold on getting a friend
				trigger = {
					ai_sociability > low_negative_ai_value
					is_physically_able_adult = yes
					NOR = {
						has_trait = shy
						has_trait = reclusive
					}
					exists = scope:pool_character.location
					any_pool_character = {
						province = scope:pool_character.location
						is_physically_able_adult = yes
						NOT = { this = scope:pool_character }
						NOT = { has_any_scripted_relation = scope:pool_character }
					}
				}
				random_pool_character = {
					province = scope:pool_character.location
					limit = {
						is_physically_able_adult = yes
						NOT = { this = scope:pool_character }
						NOT = { has_any_scripted_relation = scope:pool_character }
					}
					save_temporary_scope_as = new_friend
				}
				add_prestige = major_prestige_value
				set_relation_friend = scope:new_friend
				pay_short_term_gold = {
					target = scope:new_friend
					gold = 500
				}
			}
			
			150 = { # Spend gold on for religious purposes
				trigger = {
					ai_zeal >= medium_positive_ai_value
					learning < 30
				}
				add_learning_skill = 3
				add_piety = major_piety_value
				remove_short_term_gold = 500
			}
			
			200 = { # Spend gold on gaining prestige and training prowess!
				trigger = {	
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:pool_character }
					prowess < 30
				}
				knight_increase_prowess_chance_effect = yes
				add_prestige = major_prestige_value
				remove_short_term_gold = 500
			}
			
			100 = { # Spend gold on gaining prestige and skill!
				trigger = {	
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:pool_character }
					martial < 25
				}
				add_martial_skill = 2
				add_prestige = major_prestige_value
				remove_short_term_gold = 500
			}
			
			100 = { # Spend gold on gaining prestige and skill!
				trigger = {
					intrigue < 25
				}
				add_intrigue_skill = 3
				add_prestige = major_prestige_value
				remove_short_term_gold = 500
			}
			
			100 = { # Spend gold on gaining prestige and skill!
				trigger = {
					stewardship < 25
				}
				add_stewardship_skill = 3
				add_prestige = major_prestige_value
				remove_short_term_gold = 500
			}
			
			100 = { # Spend gold on gaining prestige and skill!
				trigger = {
					diplomacy < 25
				}
				add_diplomacy_skill = 3
				add_prestige = major_prestige_value
				remove_short_term_gold = 500
			}
			
			100 = { # Lavish wedding!
				trigger = {
					is_physically_able_adult = yes
					age <= 40
					is_married = no
					can_marry_trigger = yes
					is_concubine = no
					#The triggers below are here to avoid low fertility marriages
					OR = {
						has_sexuality = heterosexual
						has_sexuality = bisexual
					}
					NOR = {
						has_trait = celibate
						has_trait = chaste
					}
					fertility > low_fertility
				}
				
				save_temporary_scope_as = template
				
				if = {
					limit = {
						exists = scope:pool_character.location
						any_pool_character = {
							province = scope:pool_character.location
							sex_opposite_of = scope:pool_character
							is_physically_able_adult = yes
							age <= 40
							is_married = no
							can_marry_trigger = yes
							is_concubine = no
							is_attracted_to_gender_of = scope:pool_character
						}
					}
					random_pool_character = {
						province = scope:pool_character.location
						limit = {
							sex_opposite_of = scope:pool_character
							is_physically_able_adult = yes
							age <= 40
							is_married = no
							can_marry_trigger = yes
							is_concubine = no
							is_attracted_to_gender_of = scope:pool_character
						}
						save_temporary_scope_as = spouse
					}
				}
				else = {
					create_character = {
						location = scope:template.location
						opposite_gender = scope:template
						template = pool_repopulate_spouse
						save_temporary_scope_as = spouse
					}
				}


				marry = scope:spouse
				
				scope:spouse = {
					if = {
						limit = {
							exists = scope:template.host
						}
						visit_court_of = scope:template.host
					}
				}
				remove_short_term_gold = 500
			}	
			500 = { # Just waste the gold on nonsense
				add_prestige = minor_prestige_value
				remove_short_term_gold = 500
			}
		}
	}
}
